Relational Algebra Converter.

You may leave this document by using the following command:
	:q

#1 and #2 sources of execution and Assignment errors: 
  Typos and missing semi colons.

Placeholder definitions:
COLUMN_NAME           Used as a placeholder for a column's name.
CONDITION             Used as a placeholder for a condition used in the 
                      statement for select or join operations.
EXPRESSION            Used as a placeholder for nested ALG statements 
                      (including a singular table).
LITERAL               Used as a placeholder for a literal used in the 
                      statement.
OPERATION_NAME        Used as a placeholder for an aggregate operation.
RELATIVE_OP           Used as a placeholder for a relative operator in 
                      the statement.
TABLE_NAME            Used as a placeholder for a table's name in the 
                      statement.
VALUE                 Used as a placeholder for a number used in the 
                      statement.

Note: If a vertical bar is used in syntaxes below, then it indicates 
      alternatives and not its use.

Command syntax:
--Menu Commands--
  HELP;               Show help (this text).
  QUIT;               Exit program.
  EXIT;               Exit program.
  DEBUG;              Activate debug mode (troubleshooting messages).

--SQL Statement Elements--
Drop Table:
  DROP TABLE TABLE_NAME;

Order By:
  EXPRESSION ORDER BY COLUMN_NAME ASC;
  EXPRESSION ORDER BY COLUMN_NAME DESC;
  EXPRESSION ORDER BY COLUMN_NAME_1, .., COLUMN_NAME_Z ASC;
  EXPRESSION ORDER BY COLUMN_NAME_1, .., COLUMN_NAME_Z DESC;

--ALG Operations--
Project Statement:
  PROJECT COLUMN_NAME_1, .., COLUMN_NAME_Z (EXPRESSION|TABLE_NAME);
  TABLE_NAME;

Select Statement:
  SELECT COLUMN_NAME RELATIVE_OP VALUE (EXPRESSION|TABLE_NAME);
  SELECT COLUMN_NAME RELATIVE_OP COLUMN_NAME (EXPRESSION|TABLE_NAME);
  SELECT COLUMN_NAME RELATIVE_OP 'LITERAL' (EXPRESSION|TABLE_NAME);
  SELECT COLUMN_NAME CONDITION AND CONDITION (EXPRESSION|TABLE_NAME);
  SELECT COLUMN_NAME CONDITION OR CONDITION (EXPRESSION|TABLE_NAME);

Rename Statement:
  RENAME TABLE_NAME TO NEW_TABLE_NAME;
  RENAME TABLE_NAME TO NEW_TABLE_NAME (NEW_COLUMN_NAMES);
  RENAME TABLE_NAME TO (NEW_COLUMN_NAMES);
  RENAME (EXPRESSION) TO (NEW_COLUMN_NAMES);

  Please note that there is an additional NON-STANDARD implementation in 
  this program:
    RENAME (EXPRESSION) TO NEW_TABLE_NAME (NEW_COLUMN_NAMES);

Cartesian Product:
  (EXPRESSION) TIMES (EXPRESSION);
  (EXPRESSION) TIMES TABLE_NAME;
  TABLE_NAME TIMES (EXPRESSION);
  TABLE_NAME TIMES TABLE_NAME;

Division:
  (EXPRESSION) DIVIDEBY (EXPRESSION);
  (EXPRESSION) DIVIDEBY TABLE_NAME;
  TABLE_NAME DIVIDEBY (EXPRESSION);
  TABLE_NAME DIVIDEBY TABLE_NAME;

Assign operation:
  TABLE_NAME := (EXPRESSION);
  TABLE_NAME(COLUMN_NAMES) := (EXPRESSION);

Set Operation - Difference:
  (EXPRESSION) MINUS (EXPRESSION);
  (EXPRESSION) MINUS TABLE_NAME;
  TABLE_NAME MINUS (EXPRESSION);
  TABLE_NAME MINUS TABLE_NAME;

Set Operation - Intersection:
  (EXPRESSION) INTERSECT (EXPRESSION);
  (EXPRESSION) INTERSECT TABLE_NAME;
  TABLE_NAME INTERSECT (EXPRESSION);
  TABLE_NAME INTERSECT TABLE_NAME;

Set Operation - Union:
  (EXPRESSION) UNION (EXPRESSION);
  (EXPRESSION) UNION TABLE_NAME;
  TABLE_NAME UNION (EXPRESSION);
  TABLE_NAME UNION TABLE_NAME;

Join:
  (EXPRESSION) JOIN TABLE_NAME (COLUMN_NAME RELATIVE_OP COLUMN_NAME);
  (EXPRESSION) JOIN (EXPRESSION) (COLUMN_NAME RELATIVE_OP COLUMN_NAME);
  TABLE_NAME JOIN (EXPRESSION) (COLUMN_NAME RELATIVE_OP COLUMN_NAME);
  TABLE_NAME JOIN TABLE_NAME (COLUMN_NAME RELATIVE_OP COLUMN_NAME);

Equijoin:
  (EXPRESSION) EQUIJOIN TABLE_NAME (COLUMN_NAME, COLUMN_NAME);
  (EXPRESSION) EQUIJOIN (EXPRESSION) (COLUMN_NAME, COLUMN_NAME);
  TABLE_NAME EQUIJOIN (EXPRESSION) (COLUMN_NAME, COLUMN_NAME);
  TABLE_NAME EQUIJOIN TABLE_NAME (COLUMN_NAME, COLUMN_NAME);

Leftjoin:
  (EXPRESSION) LEFTJOIN TABLE_NAME (COLUMN_NAME);
  (EXPRESSION) LEFTJOIN (EXPRESSION) (COLUMN_NAME);
  TABLE_NAME LEFTJOIN (EXPRESSION) (COLUMN_NAME);
  TABLE_NAME LEFTJOIN TABLE_NAME (COLUMN_NAME);

Rightjoin:
  (EXPRESSION) RIGHTJOIN TABLE_NAME (COLUMN_NAME);
  (EXPRESSION) RIGHTJOIN (EXPRESSION) (COLUMN_NAME);
  TABLE_NAME RIGHTJOIN (EXPRESSION) (COLUMN_NAME);
  TABLE_NAME RIGHTJOIN TABLE_NAME (COLUMN_NAME);

Fulljoin:
  (EXPRESSION) FULLJOIN TABLE_NAME (COLUMN_NAME);
  (EXPRESSION) FULLJOIN (EXPRESSION) (COLUMN_NAME);
  TABLE_NAME FULLJOIN (EXPRESSION) (COLUMN_NAME);
  TABLE_NAME FULLJOIN TABLE_NAME (COLUMN_NAME);

Natural Join:
  (EXPRESSION) NJOIN (EXPRESSION);
  (EXPRESSION) NJOIN TABLE_NAME;
  TABLE_NAME NJOIN (EXPRESSION);
  TABLE_NAME NJOIN TABLE_NAME;

Natural Leftjoin:
  (EXPRESSION) NLEFTJOIN (EXPRESSION);
  (EXPRESSION) NLEFTJOIN TABLE_NAME;
  TABLE_NAME NLEFTJOIN (EXPRESSION);
  TABLE_NAME NLEFTJOIN TABLE_NAME;

Natural Rightjoin:
  (EXPRESSION) NRIGHTJOIN (EXPRESSION);
  (EXPRESSION) NRIGHTJOIN TABLE_NAME;
  TABLE_NAME NRIGHTJOIN (EXPRESSION);
  TABLE_NAME NRIGHTJOIN TABLE_NAME;

Natural Fulljoin:
  (EXPRESSION) NFULLJOIN (EXPRESSION);
  (EXPRESSION) NFULLJOIN TABLE_NAME;
  TABLE_NAME NFULLJOIN (EXPRESSION);
  TABLE_NAME NFULLJOIN TABLE_NAME;

Aggregate Statement:
  AGGREGATE SUM(COLUMN_NAME), .., COLUMN_NAME_Z (EXPRESSION|TABLE_NAME);
  AGGREGATE AVG(COLUMN_NAME), .., COLUMN_NAME_Z (EXPRESSION|TABLE_NAME);
  AGGREGATE MIN(COLUMN_NAME), .., COLUMN_NAME_Z (EXPRESSION|TABLE_NAME);
  AGGREGATE MAX(COLUMN_NAME), .., COLUMN_NAME_Z (EXPRESSION|TABLE_NAME);
  AGGREGATE COUNT(COLUMN_NAME), .., COLUMN_NAME_Z (EXPRESSION|TABLE_NAME);

End of alghelp.txt